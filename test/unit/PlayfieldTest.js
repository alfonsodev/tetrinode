var assert = require('assert');
var Playfield = require('../../index').Playfield;
var Tetromino = require('../../index').Tetromino;
debugger;
describe('Playfield collisions', function() {

  it('create', function() {
    var play1 = Playfield.create(10, 15, 5);
    assert.equal(10, play1.width);
    assert.equal(15, play1.height);
    assert.equal(5, play1.color);
  });

  it('clearComplete', function(done) {
    var matrixInput = [
      //  1  2  3  4  5  6  7  8  9 10  11
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 0
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 1
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 2
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 3
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 4
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 5
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 6
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 7
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 8
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 9
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 10
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 11
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 12
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 13
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 14
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 15
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 16
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 17
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 18
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 19
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 20
      [9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9] // 21
      [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9] // 22
    ];

    var expectedMatrix = [
      //  1  2  3  4  5  6  7  8  9 10  11
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 0
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 1
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 2
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 3
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 4
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 5
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 6
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 7
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 8
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 9
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 10
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 11
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 12
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 13
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 14
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 15
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 16
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 17
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 18
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 19
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 20
      [9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9],// 21
      [9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9] // 22
    ];


    var playfield = Playfield.create(null, null, null, matrixInput);
    var mockedEvent = {
      emit: function(eventName) {
console.log('event');
        done();

      }
    };
    var matrixResult = Playfield.clearComplete(matrixInput, mockedEvent);


    assert.deepEqual(matrixResult, expectedMatrix);
  });
});

